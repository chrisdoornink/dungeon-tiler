@tailwind base;
@tailwind components;
@tailwind utilities;

/* Pixel/retro fonts for share preview */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&family=VT323&display=swap');

.pixel-text {
  font-family: 'Press Start 2P', 'VT323', monospace !important;
  letter-spacing: 0.5px;
}

.pixel-button {
  font-family: 'Press Start 2P', 'VT323', monospace !important;
  background: linear-gradient(#2b2540, #1c1830);
  color: #f5f3ff;
  border: 4px solid #8b7fe0;
  box-shadow:
    0 0 0 4px #0d0b1a,
    inset 0 0 0 2px rgba(255, 255, 255, 0.12);
  padding: 0.75rem 1rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: transform 120ms ease, box-shadow 120ms ease;
  image-rendering: pixelated;
}

.pixel-button:hover {
  transform: translateY(-1px);
  box-shadow:
    0 0 0 4px #0d0b1a,
    0 6px 0 0 rgba(0, 0, 0, 0.35),
    inset 0 0 0 2px rgba(255, 255, 255, 0.18);
}

.pixel-button:active {
  transform: translateY(1px);
  box-shadow:
    0 0 0 4px #0d0b1a,
    inset 0 0 0 2px rgba(255, 255, 255, 0.1);
}

.pixel-button:focus-visible {
  outline: 2px solid #f9d65c;
  outline-offset: 4px;
}

.pixel-window {
  font-family: 'Press Start 2P', 'VT323', monospace !important;
  background: linear-gradient(#1f1d2d, #161225);
  color: #f5f3ff;
  border: 4px solid #8b7fe0;
  box-shadow: 0 0 0 4px #0d0b1a;
  padding: 1.25rem;
  max-width: 20rem;
  image-rendering: pixelated;
}

.pixel-window p {
  margin: 0 0 0.75rem;
  line-height: 1.6;
}

.pixel-window p:last-of-type {
  margin-bottom: 0;
}

.pixel-window a {
  color: #9ad1ff;
  text-decoration: underline;
}

.pixel-window a:hover {
  color: #c0e6ff;
}

:root {
  --background: #1B1B1B;
  --foreground: #ededed;
}

/* Global utility classes moved from CSS Modules (Vercel CSS Modules purity) */
.fov-tier-3 { filter: none; }
/* Add a subtle opacity flicker for ghost (lantern wisp) */
@keyframes ghost-flicker {
  0% { opacity: 0.7; }
  50% { opacity: 0.4; }
  100% { opacity: 0.7; }
}
.ghostFlicker {
  opacity: 0.6; /* base */
  animation: ghost-flicker 2000ms ease-in-out infinite;
}
/* Adjacent to torch: medium brightness */
.fov-tier-2 {
  filter: brightness(0.80) saturate(0.95);
  animation: torchFlickerTier2 2.2s ease-in-out infinite;
  position: relative;
  z-index: 0;
}
/* Diagonal to torch: dimmer than tier-2 but not too dark */
.fov-tier-1 {
  /* bumped from 0.40 -> 0.55 to improve corner visibility */
  filter: brightness(0.55) saturate(0.95);
  animation: torchFlickerTier1 2.7s ease-in-out infinite;
  position: relative;
  z-index: 0;
}

/* Torch snuffed: hero tile and immediate ring */
.fov-tier-snuff-core {
  filter: brightness(0.52) saturate(0.9);
  animation: none;
  position: relative;
  z-index: 0;
  box-shadow: inset 0 0 45px 18px rgba(0, 0, 0, 0.35);
}

.fov-tier-snuff-ring {
  filter: brightness(0.25) saturate(0.85);
  animation: none;
  position: relative;
  z-index: 0;
  box-shadow: inset 0 0 55px 24px rgba(0, 0, 0, 0.5);
}

/* Border width utilities used in components */
.border-b-8 { border-bottom-width: 8px !important; border-bottom-style: solid; }
.border-b-4 { border-bottom-width: 4px !important; border-bottom-style: solid; }
.border-b-2 { border-bottom-width: 2px !important; border-bottom-style: solid; }
.border-b-0 { border-bottom-width: 0px !important; border-bottom-style: solid; }

/* Specific bottom border color token */
.border-b-\[\#1f1f1f\] { border-bottom-color: var(--perspective-base) !important; }

/* Utility for invisible tiles used in tests and fallback */
.bg-gray-900 { background-color: #111827 !important; }

/* Define theme variables directly */
:root {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  /* Base scale for responsive game wrapper */
  --game-scale: 1;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #1B1B1B;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  padding: 0;
  border: none;
}

/* Global theme tokens moved from CSS Modules to avoid purity errors on Vercel */
:root {
  /* Dungeon tiler sizing */
  --tile-size: 40px;

  /* Dark forest theme colors */
  --floor-bg: #2a3328;
  --wall-top: #3a4a3e;
  --wall-side: #2c3a30;
  --wall-bottom: #1a2a20;
  --edge-highlight: #4c5a4e;
  --perspective-base: #162018;
  --overgrown-grass: #3f5a46;
  --dirt-path: #3d3426;
  --forest-accent: #4d6356;
  --forest-dark: #1e2a22;

  /* Torch flicker colors (tile flicker usage) */
  --torch-glow-tier1: rgba(255, 200, 120, 0.12);
  --torch-glow-tier2: rgba(255, 200, 120, 0.18);

  /* Torch/glow colors for viewport glow layer */
  --torch-core: rgba(190, 170, 140, 0.04);
  --torch-mid: rgba(190, 170, 140, 0.03);
  --torch-falloff: rgba(190, 170, 140, 0.02);
  --torch-outer: rgba(190, 170, 140, 0.01);

  /* Shadow overlay */
  --shadow-overlay: rgba(26, 26, 26, 0.75);

  /* Secondary glow layer */
  --torch2-core: rgba(180, 160, 130, 0.03);
  --torch2-mid: rgba(180, 160, 130, 0.02);
  --torch2-falloff: rgba(180, 160, 130, 0.01);
}

/* Fix for grid gaps in dungeon tilemap (scoped) */
.tilemap-grid {
  gap: 0 !important;
  grid-gap: 0 !important;
}

/* Ensure no borders or margins on tilemap grid items (scoped) */
.tilemap-grid > div {
  margin: 0 !important;
  padding: 0 !important;
  border: none !important;
  line-height: 0 !important;
  box-sizing: border-box !important;
}

/* Spirit effect animations */
@keyframes spiritRiseFade {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(-100px);
    opacity: 0;
  }
}

@keyframes spiritFlip {
  0%, 100% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(-1);
  }
}

/* Optional utility classes for spirit effect */
.spirit-rise-fade {
  animation: spiritRiseFade 1800ms ease-out forwards;
}
.spirit-flip {
  /* Full cycle 1400ms -> flips state every 700ms with 2 steps */
  animation: spiritFlip 1400ms steps(2, end) infinite;
}

/* Heart effect animation (for petting dogs) */
@keyframes heartFloat {
  0% {
    transform: translateY(0) scale(0.8);
    opacity: 0;
  }
  20% {
    opacity: 1;
    transform: translateY(-10px) scale(1);
  }
  100% {
    transform: translateY(-60px) scale(1.2);
    opacity: 0;
  }
}

/* Poison visual effects */
@keyframes poisonStenchRise {
  0% {
    opacity: 0.0;
    transform: translateY(8px) scale(0.9);
    filter: blur(2px);
  }
  40% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.0;
    transform: translateY(-18px) scale(1.05);
    filter: blur(3px);
  }
}

.hero-poison-glow {
  position: absolute;
  inset: 8px; /* increase inset so effect stays well within tile bounds */
  border-radius: 6px;
  /* Use only an inset shadow to avoid spilling outside tile (prevents clipping) */
  box-shadow: 0 0 14px 8px rgba(50, 220, 120, 0.18) inset;
  pointer-events: none;
}

.poison-stench {
  position: absolute;
  bottom: 6px;
  left: 50%;
  width: 14px;
  height: 18px;
  transform: translateX(-50%);
  margin-left: -3px; /* nudge left a few pixels to better center over hero */
  background: radial-gradient(ellipse at center, rgba(120, 255, 160, 0.35) 0%, rgba(120, 255, 160, 0.25) 40%, rgba(120, 255, 160, 0.12) 70%, rgba(120, 255, 160, 0.0) 100%);
  animation: poisonStenchRise 1400ms ease-in-out infinite;
  pointer-events: none;
}

.poison-vignette {
  position: absolute;
  inset: 0;
  pointer-events: none;
  /* Greenish edge vignette: minimal center, stronger at edges */
  background: radial-gradient(circle at center,
    rgba(0,0,0,0) 55%,
    rgba(40, 160, 90, 0.08) 70%,
    rgba(30, 140, 80, 0.12) 82%,
    rgba(20, 120, 70, 0.16) 92%,
    rgba(10, 90, 50, 0.20) 100%
  );
}

/* Heart pop animation for health loss */
@keyframes heartPop {
  0% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
  25% {
    transform: scale(1.5) translateY(-10px);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.2) translateY(-20px);
    opacity: 0.6;
  }
  100% {
    transform: scale(0.8) translateY(-40px);
    opacity: 0;
  }
}

.animate-heart-pop {
  animation: heartPop 600ms ease-out forwards;
}

/* Item pickup animation - center screen scale up and fade */
@keyframes itemPickupCenter {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  30% {
    transform: scale(2.5);
    opacity: 0.8;
  }
  100% {
    transform: scale(3);
    opacity: 0;
  }
}

.animate-item-pickup-center {
  animation: itemPickupCenter 1000ms ease-out forwards;
}

/* Responsive scaling: scale all game UI (except bottom controls) as a single unit below 650px */

/* Scale the entire game UI (excluding MobileControls) from a 600px baseline */
.game-scale {
  transform-origin: top center;
  width: 600px; /* baseline content width */
  margin: 0 auto; /* keep centered when scaled */
  will-change: transform;
  display: block;
}

/* Reserve space for HUD above the grid so it doesn't overlap when there's room */
.with-hud-padding {
  padding-top: 110px; /* approximate HUD height incl. gap */
}
/* On short viewports, reclaim space and allow HUD to overlay the grid */
@media (max-height: 760px) {
  .with-hud-padding { padding-top: 72px; }
}
@media (max-height: 680px) {
  .with-hud-padding { padding-top: 0; }
}

/* Spacer element version (more reliable with absolute HUD) */
.hud-spacer { height: 110px; }
@media (max-height: 760px) { .hud-spacer { height: 72px; } }
@media (max-height: 680px) { .hud-spacer { height: 0; } }

/* Stepped scaling for predictable transforms on mobile when CSS vars are suppressed */
@media (max-width: 600px) { .game-scale { transform: scale(0.98); } }
@media (max-width: 580px) { .game-scale { transform: scale(0.96); } }
@media (max-width: 560px) { .game-scale { transform: scale(0.93); } }
@media (max-width: 540px) { .game-scale { transform: scale(0.90); } }
@media (max-width: 520px) { .game-scale { transform: scale(0.87); } }
@media (max-width: 500px) { .game-scale { transform: scale(0.84); } }
@media (max-width: 480px) { .game-scale { transform: scale(0.80); } }
@media (max-width: 460px) { .game-scale { transform: scale(0.76); } }
@media (max-width: 440px) { .game-scale { transform: scale(0.72); } }
@media (max-width: 420px) { .game-scale { transform: scale(0.68); } }
@media (max-width: 400px) { .game-scale { transform: scale(0.65); } }
